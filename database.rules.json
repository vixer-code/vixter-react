{
  "rules": {
    "conversations": {
      ".read": "auth != null",
      ".indexOn": ["lastMessageTime", "lastActivity"],
      "$conversationId": {
        ".read": "auth != null && root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists()",
        ".write": "auth != null && (root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists() || !root.child('conversations').child($conversationId).exists())",
        "participants": {
          "$userId": {
            ".validate": "newData.isBoolean() && newData.val() == true"
          }
        },
        "lastMessage": {
          ".validate": "newData.isString()"
        },
        "lastMessageTime": {
          ".validate": "newData.isNumber()"
        },
        "lastSenderId": {
          ".validate": "newData.isString()"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "type": {
          ".validate": "newData.isString() && (newData.val() == 'regular' || newData.val() == 'service')"
        },
        "serviceOrderId": {
          ".validate": "newData.isString()"
        },
        "isCompleted": {
          ".validate": "newData.isBoolean()"
        },
        "messageCount": {
          ".validate": "newData.isNumber() || newData.val() == '.sv'"
        },
        "lastActivity": {
          ".validate": "newData.isNumber()"
        },
        "messages": {
          ".read": "auth != null && root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists()",
          ".write": "auth != null && root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists()",
          "$messageId": {
            ".validate": "(newData.hasChildren(['senderId', 'type', 'content', 'timestamp']) && (newData.child('senderId').val() == auth.uid || newData.child('senderId').val() == 'system')) || (newData.hasChildren(['read', 'readAt', 'readBy']) && newData.child('read').isBoolean() && newData.child('readAt').isNumber() && newData.child('readBy').isString())",
            "read": {
              ".validate": "newData.isBoolean()",
              ".write": "auth != null && root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists()"
            },
            "readAt": {
              ".validate": "newData.isNumber()",
              ".write": "auth != null && root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists()"
            },
            "readBy": {
              ".validate": "newData.isString()",
              ".write": "auth != null && root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists()"
            }
          }
        }
      }
    },
    "messages": {
      "$conversationId": {
        ".read": "auth != null && root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists()",
        ".write": "auth != null && root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists()",
        "$messageId": {
          ".validate": "newData.hasChildren(['senderId', 'type', 'content', 'timestamp']) && (newData.child('senderId').val() == auth.uid || newData.child('senderId').val() == 'system')",
          "senderId": {
            ".validate": "newData.isString() && (newData.val() == auth.uid || newData.val() == 'system')"
          },
          "type": {
            ".validate": "newData.isString() && (newData.val() == 'text' || newData.val() == 'image' || newData.val() == 'video' || newData.val() == 'audio' || newData.val() == 'file' || newData.val() == 'service_notification')"
          },
          "content": {
            ".validate": "newData.isString() && newData.val().length <= 2000"
          },
          "mediaUrl": {
            ".validate": "newData.isString()"
          },
          "mediaInfo": {
            "name": {
              ".validate": "newData.isString()"
            },
            "size": {
              ".validate": "newData.isNumber() && newData.val() > 0"
            },
            "type": {
              ".validate": "newData.isString()"
            },
            "storagePath": {
              ".validate": "newData.isString()"
            }
          },
          "serviceOrderData": {
            "id": {
              ".validate": "newData.isString()"
            },
            "serviceName": {
              ".validate": "newData.isString()"
            },
            "buyerId": {
              ".validate": "newData.isString()"
            },
            "sellerId": {
              ".validate": "newData.isString()"
            },
            "vpAmount": {
              ".validate": "newData.isNumber() && newData.val() > 0"
            },
            "status": {
              ".validate": "newData.isString()"
            },
            "additionalFeatures": {
              ".validate": "newData.hasChildren()"
            }
          },
          "timestamp": {
            ".validate": "newData.isNumber() && newData.val() <= now + 600000"
          },
          "read": {
            ".validate": "newData.isBoolean()",
            ".write": "auth != null && root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists()"
          },
          "readAt": {
            ".validate": "newData.isNumber()",
            ".write": "auth != null && root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists()"
          },
          "readBy": {
            ".validate": "newData.isString()",
            ".write": "auth != null && root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists()"
          },
          "replyTo": {
            ".validate": "newData.isString()"
          }
        }
      }
    },
    "users": {
      "$userId": {
        ".read": "auth != null",
        ".write": "$userId == auth.uid",
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i)"
        },
        "displayName": {
          ".validate": "newData.isString()"
        },
        "photoURL": {
          ".validate": "newData.isString()"
        },
        "status": {
          ".validate": "newData.isString() && (newData.val() == 'online' || newData.val() == 'offline')"
        },
        "lastSeen": {
          ".validate": "newData.isNumber()"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "profileComplete": {
          ".validate": "newData.isBoolean()"
        },
        "selectedStatus": {
          ".validate": "newData.isString() && (newData.val() == 'online' || newData.val() == 'ausente' || newData.val() == 'invisivel')"
        }
      }
    },
    "status": {
      ".read": "auth != null",
      "$userId": {
        ".read": "auth != null",
        ".write": "$userId == auth.uid",
        "state": {
          ".validate": "newData.isString() && (newData.val() == 'online' || newData.val() == 'offline' || newData.val() == 'ausente' || newData.val() == 'invisivel')"
        },
        "last_changed": {
          ".validate": "newData.isNumber() || newData.val() == '.sv' && newData.child('.sv').val() == 'timestamp'"
        }
      }
    },
    "vixink_posts": {
      ".indexOn": ["timestamp", "userId"],
      ".read": "auth != null",
      ".write": "auth != null",
      "$postId": {
        ".validate": "newData.hasChildren(['authorId', 'content', 'timestamp']) && (newData.child('category').exists() || newData.child('isRepost').exists())",
        "authorId": {
          ".validate": "newData.isString() && newData.val() == auth.uid"
        },
        "authorName": {
          ".validate": "newData.isString()"
        },
        "authorPhotoURL": {
          ".validate": "newData.isString()"
        },
        "authorUsername": {
          ".validate": "newData.isString()"
        },
        "content": {
          ".validate": "newData.isString() && newData.val().length >= 0 && newData.val().length <= 2000"
        },
        "timestamp": {
          ".validate": "newData.isNumber() && newData.val() <= now + 600000"
        },
        "category": {
          ".validate": "newData.isString() && (newData.val() == 'all' || newData.val() == 'news' || newData.val() == 'tutorial' || newData.val() == 'review' || newData.val() == 'guide' || newData.val() == 'other')"
        },
        "mediaUrl": {
          ".validate": "newData.isString()"
        },
        "mediaType": {
          ".validate": "newData.isString() && (newData.val() == 'image' || newData.val() == 'video' || newData.val() == 'audio')"
        },
        "media": {
          ".validate": "newData.val() == null || newData.hasChildren()"
        },
        "attachment": {
          ".validate": "newData.val() == null || newData.hasChildren()"
        },
        "likes": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "likedBy": {
          ".validate": "newData.hasChildren() || newData.val() == null"
        }
      }
    },
    "vixies_posts": {
      ".indexOn": ["timestamp", "userId"],
      ".read": "auth != null",
      ".write": "auth != null",
      "$postId": {
        ".validate": "newData.hasChildren(['authorId', 'content', 'timestamp']) && (newData.child('category').exists() || newData.child('isRepost').exists())",
        "authorId": {
          ".validate": "newData.isString() && newData.val() == auth.uid"
        },
        "authorName": {
          ".validate": "newData.isString()"
        },
        "authorPhotoURL": {
          ".validate": "newData.isString()"
        },
        "authorUsername": {
          ".validate": "newData.isString()"
        },
        "content": {
          ".validate": "newData.isString() && newData.val().length >= 0 && newData.val().length <= 2000"
        },
        "timestamp": {
          ".validate": "newData.isNumber() && newData.val() <= now + 600000"
        },
        "category": {
          ".validate": "newData.isString() && (newData.val() == 'all' || newData.val() == 'gaming' || newData.val() == 'art' || newData.val() == 'music' || newData.val() == 'tech' || newData.val() == 'lifestyle' || newData.val() == 'other')"
        },
        "media": {
          ".validate": "newData.hasChildren() || newData.val() == null"
        },
        "mediaUrl": {
          ".validate": "newData.isString()"
        },
        "mediaType": {
          ".validate": "newData.isString() && (newData.val() == 'image' || newData.val() == 'video' || newData.val() == 'audio')"
        },
        "attachment": {
          ".validate": "newData.val() == null || newData.hasChildren()"
        },
        "likes": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "likedBy": {
          ".validate": "newData.hasChildren() || newData.val() == null"
        }
      }
    },
    "packOrders": {
      ".indexOn": ["buyerId"],
      ".read": "auth != null",
      ".write": "auth != null",
      "$orderId": {
        ".validate": "newData.hasChildren(['buyerId', 'packId', 'status', 'timestamps'])",
        "buyerId": {
          ".validate": "newData.isString() && newData.val() == auth.uid"
        },
        "packId": {
          ".validate": "newData.isString()"
        },
        "status": {
          ".validate": "newData.isString() && (newData.val() == 'PENDING' || newData.val() == 'COMPLETED' || newData.val() == 'CANCELLED' || newData.val() == 'BANNED')"
        },
        "timestamps": {
          ".validate": "newData.hasChildren(['createdAt'])",
          "createdAt": {
            ".validate": "newData.isNumber()"
          },
          "completedAt": {
            ".validate": "newData.isNumber()"
          }
        },
        "vcAmount": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "packTitle": {
          ".validate": "newData.isString()"
        }
      }
    },
    "posts": {
      ".indexOn": ["userId", "timestamp"],
      ".read": "auth != null",
      ".write": "auth != null"
    },
    "serviceOrders": {
      ".indexOn": ["buyerId"],
      ".read": "auth != null",
      ".write": "auth != null",
      "$orderId": {
        ".validate": "newData.hasChildren(['buyerId', 'serviceId', 'status', 'timestamps'])",
        "buyerId": {
          ".validate": "newData.isString() && newData.val() == auth.uid"
        },
        "serviceId": {
          ".validate": "newData.isString()"
        },
        "status": {
          ".validate": "newData.isString() && (newData.val() == 'PENDING' || newData.val() == 'COMPLETED' || newData.val() == 'CANCELLED' || newData.val() == 'BANNED')"
        },
        "timestamps": {
          ".validate": "newData.hasChildren(['createdAt'])",
          "createdAt": {
            ".validate": "newData.isNumber()"
          },
          "completedAt": {
            ".validate": "newData.isNumber()"
          }
        },
        "vcAmount": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "serviceTitle": {
          ".validate": "newData.isString()"
        }
      }
    },
    "reviews": {
      ".read": "auth != null",
      ".write": "auth != null",
      "$userId": {
        ".read": "auth != null",
        ".write": "auth != null"
      }
    },
    "comments": {
      ".read": "auth != null",
      ".write": "auth != null",
      "$postId": {
        ".read": "auth != null",
        ".write": "auth != null",
        "$commentId": {
          ".validate": "newData.hasChildren(['authorId', 'content', 'timestamp'])",
          "authorId": {
            ".validate": "newData.isString() && newData.val() == auth.uid"
          },
          "content": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 1000"
          },
          "timestamp": {
            ".validate": "newData.isNumber() && newData.val() <= now + 600000"
          },
          "parentId": {
            ".validate": "newData.isString() || newData.val() == null"
          },
          "likes": {
            ".validate": "newData.isNumber() && newData.val() >= 0"
          },
          "likedBy": {
            ".validate": "newData.hasChildren() || newData.val() == null"
          }
        }
      }
    },
    "vixink_likes": {
      ".read": "auth != null",
      ".write": "auth != null",
      "$postId": {
        ".read": "auth != null",
        ".write": "auth != null",
        "$userId": {
          ".validate": "newData.isNumber() && newData.val() <= now + 600000"
        }
      }
    },
    "vixies_likes": {
      ".read": "auth != null",
      ".write": "auth != null",
      "$postId": {
        ".read": "auth != null",
        ".write": "auth != null",
        "$userId": {
          ".validate": "newData.isNumber() && newData.val() <= now + 600000"
        }
      }
    },
      "notifications": {
        ".read": "auth != null",
        ".write": "auth != null",
        "$userId": {
          ".read": "$userId == auth.uid",
          ".write": "auth != null",
          "$notificationId": {
            ".validate": "newData.hasChildren(['type', 'action', 'timestamp', 'read'])",
            "type": { ".validate": "newData.isString()" },
            "action": { ".validate": "newData.isString()" },
            "postId": { ".validate": "newData.isString()" },
            "serviceId": { ".validate": "newData.isString()" },
            "packId": { ".validate": "newData.isString()" },
            "buyerId": { ".validate": "newData.isString()" },
            "sellerId": { ".validate": "newData.isString()" },
            "actorId": { ".validate": "newData.isString()" },
            "actorName": { ".validate": "newData.isString()" },
            "actorUsername": { ".validate": "newData.isString()" },
            "buyerName": { ".validate": "newData.isString()" },
            "sellerName": { ".validate": "newData.isString()" },
            "timestamp": { ".validate": "newData.isNumber() && newData.val() <= now + 600000" },
            "read": { ".validate": "newData.isBoolean()" },
            "postContent": { ".validate": "newData.isString()" },
            "commentContent": { ".validate": "newData.isString()" },
            "amount": { ".validate": "newData.isNumber() && newData.val() > 0" },
            "serviceName": { ".validate": "newData.isString()" },
            "packName": { ".validate": "newData.isString()" },
            "orderId": { ".validate": "newData.isString()" },
            "senderName": { ".validate": "newData.isString()" },
            "recipientId": { ".validate": "newData.isString()" }
          }
        }
      }
  }
}
